version: '2'
services:
  postgresql:
    build:
      context: .
      dockerfile: Dockerfile.db
    environment:
      - PGDATA=/var/lib/postgresql
      - PGUSER=root
      - PGPASSWORD=root
    expose:
      - "5432"
    networks:
      - db_private
    volumes:
      - ./docker-volumes/var-lib-postgresql:/var/lib/postgresql:Z
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    depends_on:
      - postgresql
    entrypoint:
      - ./cavedb/scripts/docker-worker-entrypoint.sh
    environment:
      - CAVEDB_DATA_BASE_DIR=/usr/local/cavedbmanager-data
      - CAVEDB_DEM_PATH=/usr/local/postgis-data-importer/download/us_wv/dem
      - CAVEDB_GIS_DBNAME=wvgis
      - CAVEDB_WORKER_MSG_DIR=/var/run/cavedb-worker
      - DJANGO_SETTINGS_MODULE=cavedb.settings
      # Uncomment the following if you would like to use the 2003 aerial imagery.
      # This is the latest publicly available imagery available that is available
      # with the leaves off the trees. Requires downloading the GeoExpress
      # Command Line Applications from
      # https://www.lizardtech.com/gis-tools/tools-and-utilities
      #- MRSID_DECODE_BINARY=/usr/local/cavedbmanager-data/GeoExpressCLUtils-9.5.0.4326-linux64/bin/mrsidgeodecode
      - PGHOST=postgresql
      - PGPORT=5432
      - PGDATABASE=cavedb
      - PGUSER=root
      - PGPASSWORD=root
      - POSTGIS_IMPORTER_BASE_DIR=/usr/local/postgis-data-importer
      - POSTGIS_IMPORTER_SAMPLE_PATCHFILE=sample-bulletin/postgis-data-importer-sample-bulletin.patch
      - PYTHONPATH=/usr/local/cavedbmanager
    networks:
      - db_private
      # The web_public network can be removed after the initial run and all of the sample
      # GIS data has been downloaded.
      - web_public
    ulimits:
      nofile: 20480
    volumes:
      - ./docker-volumes/cavedb-worker:/var/run/cavedb-worker:z
      - ./docker-volumes/cavedbmanager-data:/usr/local/cavedbmanager-data:z
      - ./docker-volumes/postgis-data-importer-downloads:/usr/local/postgis-data-importer/download:z
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    depends_on:
      - postgresql
      - worker
    entrypoint:
      - ./cavedb/scripts/docker-web-entrypoint.sh
    environment:
      # Separate multiple hosts with a :
      - CAVEDB_ALLOWED_HOSTS=localhost
      - CAVEDB_DATA_BASE_DIR=/usr/local/cavedbmanager-data
      # Set this to 0 when running in production. Also set EMAIL_* settings below for error emails to
      # the address specified in WEB_ADMIN_EMAIL.
      - CAVEDB_DEBUG=1
      - CAVEDB_GIS_DBNAME=wvgis
      - CAVEDB_SECRET_KEY=FIXME_CHANGE_THIS_SECRET_KEY
      - CAVEDB_SITE_HEADER=My Cave Database
      - CAVEDB_WORKER_MSG_DIR=/var/run/cavedb-worker
      - DJANGO_SETTINGS_MODULE=cavedb.settings
      #- EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
      #- EMAIL_HOST=hostname
      #- EMAIL_PORT=587
      #- EMAIL_HOST_USER=user
      #- EMAIL_HOST_PASSWORD=pass
      # A self signed certificate will be automatically generated for you if the SSL_* files below
      # do not exist. Be sure to update the conf/nginx-app.conf file if you change these paths.
      - SSL_COMBINED_CERTS=/etc/cavedb-ssl/ssl-combined-certs.pem
      - SSL_KEY=/etc/cavedb-ssl/ssl.key
      - PGHOST=postgresql
      - PGPORT=5432
      - PGDATABASE=cavedb
      - PGUSER=root
      - PGPASSWORD=root
      - PYTHONPATH=/usr/local/cavedbmanager
      - WEB_ADMIN_FULLNAME=Your Name
      - WEB_ADMIN_EMAIL=user@domain.com
      # The WEB_ADMIN_USER and WEB_ADMIN_PASS variables are here for initial bootstrap
      # of the project. Once you get it going, you should remove these and change your
      # password.
      - WEB_ADMIN_USER=admin
      - WEB_ADMIN_PASS=password
    networks:
      - db_private
      - web_public
    ports:
      - "8000:80"
      - "8443:443"
    volumes:
      - ./docker-volumes/cavedb-ssl:/etc/cavedb-ssl:Z
      - ./docker-volumes/cavedb-worker:/var/run/cavedb-worker:z
      - ./docker-volumes/cavedbmanager-data:/usr/local/cavedbmanager-data:z
  cron:
    build:
      context: .
      dockerfile: Dockerfile.cron
    depends_on:
      - worker
    networks:
      - cron_private
    volumes:
      - ./docker-volumes/cavedb-worker:/var/run/cavedb-worker:z
networks:
  web_public:
  db_private:
    internal: true
  cron_private:
    internal: true
